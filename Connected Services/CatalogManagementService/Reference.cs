//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabyrinthClient.CatalogManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User[] UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User[] User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCountry {
            get {
                return this.idCountryField;
            }
            set {
                if ((this.idCountryField.Equals(value) != true)) {
                    this.idCountryField = value;
                    this.RaisePropertyChanged("idCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.FriendList[] FriendListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.FriendList[] FriendList1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.FriendRequest[] FriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.FriendRequest[] FriendRequest1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.PlayerSkins[] PlayerSkinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.Preferences[] PreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.Stats[] StatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string profilePictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.FriendList[] FriendList {
            get {
                return this.FriendListField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendListField, value) != true)) {
                    this.FriendListField = value;
                    this.RaisePropertyChanged("FriendList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.FriendList[] FriendList1 {
            get {
                return this.FriendList1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FriendList1Field, value) != true)) {
                    this.FriendList1Field = value;
                    this.RaisePropertyChanged("FriendList1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.FriendRequest[] FriendRequest {
            get {
                return this.FriendRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequestField, value) != true)) {
                    this.FriendRequestField = value;
                    this.RaisePropertyChanged("FriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.FriendRequest[] FriendRequest1 {
            get {
                return this.FriendRequest1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FriendRequest1Field, value) != true)) {
                    this.FriendRequest1Field = value;
                    this.RaisePropertyChanged("FriendRequest1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.PlayerSkins[] PlayerSkins {
            get {
                return this.PlayerSkinsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerSkinsField, value) != true)) {
                    this.PlayerSkinsField = value;
                    this.RaisePropertyChanged("PlayerSkins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.Preferences[] Preferences {
            get {
                return this.PreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferencesField, value) != true)) {
                    this.PreferencesField = value;
                    this.RaisePropertyChanged("Preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.Stats[] Stats {
            get {
                return this.StatsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsField, value) != true)) {
                    this.StatsField = value;
                    this.RaisePropertyChanged("Stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCountry {
            get {
                return this.idCountryField;
            }
            set {
                if ((this.idCountryField.Equals(value) != true)) {
                    this.idCountryField = value;
                    this.RaisePropertyChanged("idCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUser {
            get {
                return this.idUserField;
            }
            set {
                if ((this.idUserField.Equals(value) != true)) {
                    this.idUserField = value;
                    this.RaisePropertyChanged("idUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profilePicture {
            get {
                return this.profilePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.profilePictureField, value) != true)) {
                    this.profilePictureField = value;
                    this.RaisePropertyChanged("profilePicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendList", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class FriendList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFriendListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserOneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserTwoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFriendList {
            get {
                return this.idFriendListField;
            }
            set {
                if ((this.idFriendListField.Equals(value) != true)) {
                    this.idFriendListField = value;
                    this.RaisePropertyChanged("idFriendList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUserOne {
            get {
                return this.idUserOneField;
            }
            set {
                if ((this.idUserOneField.Equals(value) != true)) {
                    this.idUserOneField = value;
                    this.RaisePropertyChanged("idUserOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUserTwo {
            get {
                return this.idUserTwoField;
            }
            set {
                if ((this.idUserTwoField.Equals(value) != true)) {
                    this.idUserTwoField = value;
                    this.RaisePropertyChanged("idUserTwo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequest", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class FriendRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFriendRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idRequesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFriendRequest {
            get {
                return this.idFriendRequestField;
            }
            set {
                if ((this.idFriendRequestField.Equals(value) != true)) {
                    this.idFriendRequestField = value;
                    this.RaisePropertyChanged("idFriendRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idRequested {
            get {
                return this.idRequestedField;
            }
            set {
                if ((this.idRequestedField.Equals(value) != true)) {
                    this.idRequestedField = value;
                    this.RaisePropertyChanged("idRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idRequester {
            get {
                return this.idRequesterField;
            }
            set {
                if ((this.idRequesterField.Equals(value) != true)) {
                    this.idRequesterField = value;
                    this.RaisePropertyChanged("idRequester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerSkins", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class PlayerSkins : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.Skin SkinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPlayerSkinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idSkinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.Skin Skin {
            get {
                return this.SkinField;
            }
            set {
                if ((object.ReferenceEquals(this.SkinField, value) != true)) {
                    this.SkinField = value;
                    this.RaisePropertyChanged("Skin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPlayerSkins {
            get {
                return this.idPlayerSkinsField;
            }
            set {
                if ((this.idPlayerSkinsField.Equals(value) != true)) {
                    this.idPlayerSkinsField = value;
                    this.RaisePropertyChanged("idPlayerSkins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idSkin {
            get {
                return this.idSkinField;
            }
            set {
                if ((this.idSkinField.Equals(value) != true)) {
                    this.idSkinField = value;
                    this.RaisePropertyChanged("idSkin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUser {
            get {
                return this.idUserField;
            }
            set {
                if ((this.idUserField.Equals(value) != true)) {
                    this.idUserField = value;
                    this.RaisePropertyChanged("idUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preferences", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Preferences : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> lastPickedGameboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lastPickedSkinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPreferences {
            get {
                return this.idPreferencesField;
            }
            set {
                if ((this.idPreferencesField.Equals(value) != true)) {
                    this.idPreferencesField = value;
                    this.RaisePropertyChanged("idPreferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUser {
            get {
                return this.idUserField;
            }
            set {
                if ((this.idUserField.Equals(value) != true)) {
                    this.idUserField = value;
                    this.RaisePropertyChanged("idUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> lastPickedGameboard {
            get {
                return this.lastPickedGameboardField;
            }
            set {
                if ((this.lastPickedGameboardField.Equals(value) != true)) {
                    this.lastPickedGameboardField = value;
                    this.RaisePropertyChanged("lastPickedGameboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lastPickedSkin {
            get {
                return this.lastPickedSkinField;
            }
            set {
                if ((this.lastPickedSkinField.Equals(value) != true)) {
                    this.lastPickedSkinField = value;
                    this.RaisePropertyChanged("lastPickedSkin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stats", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Stats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> gamesPlayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> gamesWonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> gamesPlayed {
            get {
                return this.gamesPlayedField;
            }
            set {
                if ((this.gamesPlayedField.Equals(value) != true)) {
                    this.gamesPlayedField = value;
                    this.RaisePropertyChanged("gamesPlayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> gamesWon {
            get {
                return this.gamesWonField;
            }
            set {
                if ((this.gamesWonField.Equals(value) != true)) {
                    this.gamesWonField = value;
                    this.RaisePropertyChanged("gamesWon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idStats {
            get {
                return this.idStatsField;
            }
            set {
                if ((this.idStatsField.Equals(value) != true)) {
                    this.idStatsField = value;
                    this.RaisePropertyChanged("idStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUser {
            get {
                return this.idUserField;
            }
            set {
                if ((this.idUserField.Equals(value) != true)) {
                    this.idUserField = value;
                    this.RaisePropertyChanged("idUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Skin", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Skin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LabyrinthClient.CatalogManagementService.PlayerSkins[] PlayerSkinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> gamesWonToUnlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idSkinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool lockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LabyrinthClient.CatalogManagementService.PlayerSkins[] PlayerSkins {
            get {
                return this.PlayerSkinsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerSkinsField, value) != true)) {
                    this.PlayerSkinsField = value;
                    this.RaisePropertyChanged("PlayerSkins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> gamesWonToUnlock {
            get {
                return this.gamesWonToUnlockField;
            }
            set {
                if ((this.gamesWonToUnlockField.Equals(value) != true)) {
                    this.gamesWonToUnlockField = value;
                    this.RaisePropertyChanged("gamesWonToUnlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idSkin {
            get {
                return this.idSkinField;
            }
            set {
                if ((this.idSkinField.Equals(value) != true)) {
                    this.idSkinField = value;
                    this.RaisePropertyChanged("idSkin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool @lock {
            get {
                return this.lockField;
            }
            set {
                if ((this.lockField.Equals(value) != true)) {
                    this.lockField = value;
                    this.RaisePropertyChanged("lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CatalogManagementService.ICatalogManagement")]
    public interface ICatalogManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/getAllCountries", ReplyAction="http://tempuri.org/ICatalogManagement/getAllCountriesResponse")]
        LabyrinthClient.CatalogManagementService.Country[] getAllCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/getAllCountries", ReplyAction="http://tempuri.org/ICatalogManagement/getAllCountriesResponse")]
        System.Threading.Tasks.Task<LabyrinthClient.CatalogManagementService.Country[]> getAllCountriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogManagementChannel : LabyrinthClient.CatalogManagementService.ICatalogManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogManagementClient : System.ServiceModel.ClientBase<LabyrinthClient.CatalogManagementService.ICatalogManagement>, LabyrinthClient.CatalogManagementService.ICatalogManagement {
        
        public CatalogManagementClient() {
        }
        
        public CatalogManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LabyrinthClient.CatalogManagementService.Country[] getAllCountries() {
            return base.Channel.getAllCountries();
        }
        
        public System.Threading.Tasks.Task<LabyrinthClient.CatalogManagementService.Country[]> getAllCountriesAsync() {
            return base.Channel.getAllCountriesAsync();
        }
    }
}
