<Window x:Class="LabyrinthClient.Lobby"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabyrinthClient"
        xmlns:p="clr-namespace:LabyrinthClient.Properties"
        mc:Ignorable="d"
        Icon="/GraphicItems/logo.png"
        Title="Lobby" 
        WindowState="Maximized"
        Height="814" Width="1479"
        Closing="CloseWindow">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="0,0,0,-6">
        <Grid.Background>
            <ImageBrush 
                ImageSource="/GraphicItems/LobbyCover.png"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="543*"/>
            <RowDefinition Height="114*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="342*"/>
            <ColumnDefinition Width="625*"/>
            <ColumnDefinition Width="342*"/>
        </Grid.ColumnDefinitions>

        <!-- Canvas principal para el área de mensajes -->
        <StackPanel HorizontalAlignment="Left" Height="354" VerticalAlignment="Top" Margin="48,28,0,0" Width="322" Grid.Row="1">
            <StackPanel.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </StackPanel.Background>

            <ListBox x:Name="MessagesListBox" 
         Foreground="White" 
         Width="300" 
         Height="291" 
         BorderBrush="Gray" 
         HorizontalAlignment="Center" 
         Canvas.Top="33" 
         Canvas.Left="5" 
         Margin="10,10,10,10" 
         Background="{x:Null}" 
         IsHitTestVisible="False" />

            <DockPanel Height="34" Width="299">
                <TextBox x:Name="MessageTextBox" Foreground="Black" TextWrapping="Wrap" BorderBrush="Gray" Width="227" Height="34"
                         Style="{DynamicResource CustomTextBoxStyle}"/>
                <Button x:Name="SendButton" Content="Send" Click="SendButtonIsPressed" Width="62" Height="34"
                        Style="{DynamicResource CustomButtonStyle}"/>

            </DockPanel>

        </StackPanel>

        <!-- Rectángulo para el fondo de la parte inferior -->
        <Rectangle HorizontalAlignment="Center" Height="111" Stroke="Black" VerticalAlignment="Center" Width="595" Grid.Column="1" Grid.Row="2" RadiusX="0" RadiusY="0"/>

        <!-- Botón para regresar -->
        <Button HorizontalAlignment="Left" Margin="48,14,0,0" VerticalAlignment="Top" Width="34" Height="33" BorderBrush="White" Foreground="White" Click="BackButtonIsPressed"
                Style="{DynamicResource CustomIconButtonStyle}">
            <Button.Background>
                <ImageBrush ImageSource="/GraphicItems/BackButton.png"/>
            </Button.Background>
        </Button>


        <!-- Etiqueta para el código del lobby -->
        <StackPanel Grid.Column="1" Margin="730,28,70,0" Orientation="Vertical" Grid.Row="1" VerticalAlignment="Top" Height="341" Cursor="" Grid.ColumnSpan="2" >
            <StackPanel.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </StackPanel.Background>
            <Label FontWeight="Bold"
               Foreground="Black"
               Height="44"
               Width="200"
               Margin="0, 0, 0, 0">
                <TextBlock Text="{x:Static p:Resources.LobbyMembersLabel}"
                      Height="26" Width="171"
                           Foreground="White" FontSize ="20"/>
            </Label>

            <ListView x:Name="DynamicListView" ItemsSource="{Binding Items}" Width="300" Height="252" Background="{x:Null}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="1" Width="277" Height="54" HorizontalAlignment="Center">
                            <Canvas Margin="0,0,0,-2">
                                <!-- Imagen de perfil -->
                                <Image Width="40" Height="40" Canvas.Left="10" Canvas.Top="7" Source="{Binding ProfilePicture}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="/GraphicItems/userProfilePicture.png"/>
                                        </Style>
                                    </Image.Style>
                                </Image>

                                <!-- Texto -->
                                <TextBlock Width="136" Canvas.Top="20" Text="{Binding Username}" Canvas.Left="60" HorizontalAlignment="Left" FontSize="12" FontWeight="Bold" Foreground="White"/>
                                <!-- Botón para agregar amigos -->
                                <Button Width="25" VerticalAlignment="Top" Canvas.Top="15" Canvas.Left="194" Height="25" HorizontalAlignment="Left" Click="AddFriendButtonIsPressed" BorderBrush="{x:Null}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <!-- Ocultar si IsFriend es True -->
                                                <DataTrigger Binding="{Binding IsFriend}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <!-- Ocultar si IsRegistered es False -->
                                                <DataTrigger Binding="{Binding IsRegistered}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/GraphicItems/AddFriendButton.png"/>
                                    </Button.Background>
                                </Button>

                                <!-- Botón para echar a alguien -->
                                <Button Width="25" VerticalAlignment="Center" Canvas.Top="15" Canvas.Left="230" Height="25" HorizontalAlignment="Left" Click="KickOutButtonIsPressed" BorderBrush="{x:Null}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <!-- Ocultar si IsCurrentUser es True -->
                                                <DataTrigger Binding="{Binding IsCurrentUser}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>

                                                <!-- Ocultar si IsAdmin es False -->
                                                <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Background>
                                        <ImageBrush ImageSource="/GraphicItems/KickOutButton.png"/>
                                    </Button.Background>
                                </Button>

                                <!-- Botón para seleccionar personaje -->
                                <Button Width="98" VerticalAlignment="Center" Canvas.Top="10" Canvas.Left="168" Height="30" HorizontalAlignment="Left" Content="Select character" Click="SelectCharacterButtonIsPressed" BorderBrush="{x:Null}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource CustomButtonStyle}" TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCurrentUser}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Canvas>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Button Content="{x:Static p:Resources.InviteFriendButton}" 
                Width="111"
                Click="InviteFriendButtonIsPressed"
                Style="{StaticResource CustomButtonStyle}" Height="30" Margin="10, 10, 10, 10" />

        </StackPanel>
        <TextBox x:Name="lobbyCodeLabel"
         Text="lobbyCodeLabel"
         HorizontalAlignment="Center"
         Margin="0,16,0,0"
         VerticalAlignment="Top"
         IsReadOnly="True"
         BorderBrush="Transparent" 
         Background="Transparent" Grid.Column="1" 
                 FontWeight="Bold"
                 Foreground="Black"/>
    </Grid>
</Window>
